name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation with GCP

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history for git-based versioning

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Get image tag (Git hash)
        id: image_tag
        run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image with Jib
        working-directory: ./backend
        # The Jib plugin will automatically use the gcloud credential helper configured by the auth action.
        # We override the tags here to use the short git hash for deterministic deployments.
        run: ./gradlew jib -Djib.to.tags=${{ steps.image_tag.outputs.tag }},latest

      - name: Set up Pulumi
        uses: pulumi/actions@v5

      - name: Install Node.js dependencies
        working-directory: ./infrastructure
        run: npm install

      - name: Deploy to Cloud Run with Pulumi
        working-directory: ./infrastructure
        run: |
          pulumi login gs://coach-assist-pulumi-state-2025
          pulumi stack select dev
          pulumi config set imageTag ${{ steps.image_tag.outputs.tag }}
          pulumi up --yes
        env:
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}